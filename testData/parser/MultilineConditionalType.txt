<?php
/**
 * @param $a
 * @param $b
 * @param $c
 * @return ($a is int|bool
 *             ? ($b is string
 *                   ? int
 *                   : string)
 *             : ($c is positive-int
*                    ? array
*                    : bool))
 */
function a($a, $b, $c) : array|bool|int|string
{

}

---
PHP file
  PsiElement(Non Lazy Group statement)
    PsiElement(php opening tag)('<?php')
    PsiWhiteSpace('\n')
    PhpDocCommentImpl
      PsiElement(DOC_COMMENT_START)('/**')
      PsiWhiteSpace('\n ')
      PsiElement(DOC_LEADING_ASTERISK)('*')
      PsiWhiteSpace(' ')
      PhpDocParamTagImpl: @param
        PsiElement(DOC_TAG_NAME)('@param')
        PsiWhiteSpace(' ')
        PhpDocVarImpl: a
          PsiElement(DOC_VARIABLE)('$a')
        PhpPsiElementImpl
          <empty list>
      PsiWhiteSpace('\n ')
      PsiElement(DOC_LEADING_ASTERISK)('*')
      PsiWhiteSpace(' ')
      PhpDocParamTagImpl: @param
        PsiElement(DOC_TAG_NAME)('@param')
        PsiWhiteSpace(' ')
        PhpDocVarImpl: b
          PsiElement(DOC_VARIABLE)('$b')
        PhpPsiElementImpl
          <empty list>
      PsiWhiteSpace('\n ')
      PsiElement(DOC_LEADING_ASTERISK)('*')
      PsiWhiteSpace(' ')
      PhpDocParamTagImpl: @param
        PsiElement(DOC_TAG_NAME)('@param')
        PsiWhiteSpace(' ')
        PhpDocVarImpl: c
          PsiElement(DOC_VARIABLE)('$c')
        PhpPsiElementImpl
          <empty list>
      PsiWhiteSpace('\n ')
      PsiElement(DOC_LEADING_ASTERISK)('*')
      PsiWhiteSpace(' ')
      PhpDocReturnTagImpl: @return
        PsiElement(DOC_TAG_NAME)('@return')
        PsiWhiteSpace(' ')
        PhpDocTypeImpl: %EMPTY%
          PsiElement(DOC_LPAREN)('(')
          PhpDocVarImpl: a
            PsiElement(DOC_VARIABLE)('$a')
          PsiWhiteSpace(' ')
          PsiElement(DOC_IDENTIFIER)('is')
          PsiWhiteSpace(' ')
          PhpDocTypeImpl: int
            PsiElement(DOC_IDENTIFIER)('int')
          PsiElement(DOC_PIPE)('|')
          PhpDocTypeImpl: bool
            PsiElement(DOC_IDENTIFIER)('bool')
            PsiWhiteSpace('\n ')
            PsiElement(DOC_LEADING_ASTERISK)('*')
          PsiWhiteSpace('             ')
          PsiElement(DOC_TEXT)('?')
          PsiWhiteSpace(' ')
          PhpDocTypeImpl: %EMPTY%
            PsiElement(DOC_LPAREN)('(')
            PhpDocVarImpl: b
              PsiElement(DOC_VARIABLE)('$b')
            PsiWhiteSpace(' ')
            PsiElement(DOC_IDENTIFIER)('is')
            PsiWhiteSpace(' ')
            PhpDocTypeImpl: string
              PsiElement(DOC_IDENTIFIER)('string')
              PsiWhiteSpace('\n ')
              PsiElement(DOC_LEADING_ASTERISK)('*')
            PsiWhiteSpace('                   ')
            PsiElement(DOC_TEXT)('?')
            PsiWhiteSpace(' ')
            PhpDocTypeImpl: int
              PsiElement(DOC_IDENTIFIER)('int')
              PsiWhiteSpace('\n ')
              PsiElement(DOC_LEADING_ASTERISK)('*')
            PsiWhiteSpace('                   ')
            PsiElement(DOC_TEXT)(':')
            PsiWhiteSpace(' ')
            PhpDocTypeImpl: string
              PsiElement(DOC_IDENTIFIER)('string')
            PsiElement(DOC_RPAREN)(')')
            PsiWhiteSpace('\n ')
            PsiElement(DOC_LEADING_ASTERISK)('*')
          PsiWhiteSpace('             ')
          PsiElement(DOC_TEXT)(':')
          PsiWhiteSpace(' ')
          PhpDocTypeImpl: %EMPTY%
            PsiElement(DOC_LPAREN)('(')
            PhpDocVarImpl: c
              PsiElement(DOC_VARIABLE)('$c')
            PsiWhiteSpace(' ')
            PsiElement(DOC_IDENTIFIER)('is')
            PsiWhiteSpace(' ')
            PhpDocTypeImpl: positive-int
              PsiElement(DOC_IDENTIFIER)('positive-int')
              PsiWhiteSpace('\n')
              PsiElement(DOC_LEADING_ASTERISK)('*')
            PsiWhiteSpace('                    ')
            PsiElement(DOC_TEXT)('?')
            PsiWhiteSpace(' ')
            PhpDocTypeImpl: array
              PsiElement(DOC_IDENTIFIER)('array')
              PsiWhiteSpace('\n')
              PsiElement(DOC_LEADING_ASTERISK)('*')
            PsiWhiteSpace('                    ')
            PsiElement(DOC_TEXT)(':')
            PsiWhiteSpace(' ')
            PhpDocTypeImpl: bool
              PsiElement(DOC_IDENTIFIER)('bool')
            PsiElement(DOC_RPAREN)(')')
          PsiElement(DOC_RPAREN)(')')
        PhpPsiElementImpl
          <empty list>
      PsiWhiteSpace('\n ')
      PsiElement(DOC_COMMENT_END)('*/')
    PsiWhiteSpace('\n')
    FunctionImpl: a
      PsiElement(function)('function')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('a')
      PsiElement(()('(')
      Parameter list
        ParameterImpl: a
          PsiElement(variable)('$a')
        PsiElement(comma)(',')
        PsiWhiteSpace(' ')
        ParameterImpl: b
          PsiElement(variable)('$b')
        PsiElement(comma)(',')
        PsiWhiteSpace(' ')
        ParameterImpl: c
          PsiElement(variable)('$c')
      PsiElement())(')')
      PsiWhiteSpace(' ')
      PsiElement(colon)(':')
      PsiWhiteSpace(' ')
      Return type
        ClassReferenceImpl: array
          PsiElement(array)('array')
        PsiElement(bit or)('|')
        ClassReferenceImpl: bool
          PsiElement(identifier)('bool')
        PsiElement(bit or)('|')
        ClassReferenceImpl: int
          PsiElement(identifier)('int')
        PsiElement(bit or)('|')
        ClassReferenceImpl: string
          PsiElement(identifier)('string')
      PsiWhiteSpace('\n')
      PsiElement(Group statement)
        PsiElement({)('{')
        PsiWhiteSpace('\n\n')
        PsiElement(})('}')